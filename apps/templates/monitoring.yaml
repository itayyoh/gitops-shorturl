{{- if .Values.applications.monitoring.enabled }}
# First application for CRDs
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: monitoring-crds
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "0"
spec:
  project: default
  source:
    repoURL: {{ .Values.global.repoUrl }}
    targetRevision: {{ .Values.global.targetRevision }}
    path: helm/monitoring/crds
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
      - Replace=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m

---
# Second application for Prometheus Operator
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ .Values.applications.monitoring.name }}
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  project: default
  source:
    repoURL: {{ .Values.global.repoUrl }}
    targetRevision: {{ .Values.global.targetRevision }}
    path: {{ .Values.applications.monitoring.path }}
    helm:
      valueFiles:
        - values.yaml
      parameters:
        - name: kube-prometheus-stack.prometheusOperator.createCustomResource
          value: "false"
  destination:
    server: https://kubernetes.default.svc
    namespace: {{ .Values.applications.monitoring.namespace }}
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
{{- end }}