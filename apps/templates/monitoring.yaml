apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  project: default
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: "48.1.1"
    chart: kube-prometheus-stack
    helm:
      values: |
        prometheusOperator:
          createCustomResource: true
          admissionWebhooks:
            enabled: false
            patch:
              enabled: false
          tls:
            enabled: false
        crds:
          enabled: true
          create: true
        fullnameOverride: prometheus
        
        grafana:
          enabled: true
          resources:
            limits:
              cpu: 300m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          ingress:
            enabled: true
            ingressClassName: nginx
            annotations:
              cert-manager.io/cluster-issuer: letsencrypt-prod
              nginx.ingress.kubernetes.io/ssl-redirect: "true"
            hosts:
              - grafana.ddns.net
            tls:
              - secretName: grafana-tls
                hosts:
                  - grafana.ddns.net
          sidecar:
            dashboards:
              enabled: true
              searchNamespace: ALL
            datasources:
              enabled: true
              defaultDatasourceEnabled: true
          datasources:
            datasources.yaml:
              apiVersion: 1
              datasources:
                - name: Prometheus
                  type: prometheus
                  url: http://prometheus-prometheus:9090
                  access: proxy
                  isDefault: true
                  jsonData:
                    timeInterval: "5s"
                    queryTimeout: "30s"
                    scrapeInterval: 5s

        prometheus:
          prometheusSpec:
            scrapeInterval: "5s"
            evaluationInterval: "5s"
            retention: 7d
            resources:
              requests:
                cpu: 300m
                memory: 500Mi
              limits:
                cpu: 600m
                memory: 1Gi
            serviceMonitorSelector:
              matchLabels:
                app.kubernetes.io/instance: kube-prometheus-stack

        alertmanager:
          enabled: true
        
        nodeExporter:
          enabled: true
        
        kubeStateMetrics:
          enabled: true

  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true